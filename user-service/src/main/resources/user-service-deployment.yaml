# Define a Service to Expose user microservice to Other Services within Cluster
apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: user-service  # DNS name
    labels:
      app: user-service
  spec:
    ports: 
      - port: 80
        targetPort: 8090
        protocol: TCP
    type: ClusterIP
    selector: 
      app: user-service   # user-service Pod should contain same labels
# Define a Deployment to configure user-service on server
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: user-service-deployment
    labels:
      app: user-service
  spec:
    replicas: 1
    selector:
      matchLabels: 
        app: user-service   # user-service Pod should contain same labels
    template:
      metadata:
        labels:
          app: user-service
      spec:
          containers:
            - name: user-service
              image: djvjaysingh/user-service
              env: # Setting Environment Variables
                - name: MYSQL_HOST_NAME
                  valueFrom:
                    configMapKeyRef:
                      name: nagp-service-app-config  # ConfigMap Name
                      key: MYSQL_HOST_NAME
                - name: MYSQL_USER_NAME
                  valueFrom:
                    secretKeyRef: 
                      name: nagp-service-app-secret  # Secret Name
                      key: MYSQL_USER_NAME
                - name: MYSQL_PASSWORD
                  valueFrom:
                    secretKeyRef: 
                      name: nagp-service-app-secret  # Secret Name
                      key: MYSQL_PASSWORD
                - name: MYSQL_DATABASE_NAME
                  valueFrom:
                    configMapKeyRef:
                      name: nagp-service-app-config  # ConfigMap Name
                      key: MYSQL_DATABASE_NAME
                - name: JAEGER_HOST
                  valueFrom:
                    configMapKeyRef:
                      name: nagp-service-app-config  # ConfigMap Name
                      key: JAEGER_HOST
              ports:
                - containerPort: 8090